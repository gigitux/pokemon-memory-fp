{"version":3,"sources":["game/wizard/wizard.module.css","error/error.types.ts","types/nullable.guards.ts","game/card/card.component.tsx","player/player.reducer.ts","error/error.guards.ts","Router.tsx","error/adapter-error.factory.ts","error/api-error.factory.ts","pokemon/pokemon.adapter.ts","pokemon/pokemon.reducer.ts","redux/redux.reducer.ts","redux/store.ts","game/card-smart/card-smart.component.tsx","game/card-smart/card-smart-hook.ts","game/counter/counter.component.tsx","game/counter-smart/counter-smart.component.tsx","game/counter-smart/counter-smart.hook.ts","game/board/board.component.tsx","array/duplicate-elements.ts","array/shuffle-elements.ts","game/board-smart/book-smart.utils.ts","game/board-smart/board-smart.hook.ts","game/board-smart/board-smart.component.tsx","game/win/win.component.tsx","game/wizard/wizard.component.tsx","game/wizard-smart/wizard-smart.component.tsx","game/wizard-smart/wizard-smart.hooks.ts","App.tsx","index.tsx","game/card/card.module.css","game/board/board.module.css"],"names":["module","exports","ErrorType","isNotNil","value","undefined","CardComponent","pokemon","isOpened","foundPokemonNames","onClick","isOpen","includes","name","className","styles","content","noPointerEvents","back","backAnimation","width","height","borderWidth","borderRadius","overflow","boxContainer","src","sprites","frontDefault","front","frontAnimation","playerSlice","createSlice","initialState","moves","selectedPokemon","reducers","addMove","state","setSelectedPokemon","action","payload","addPokemonName","foundPokemonName","selectPlayer","player","RouterPath","isError","createAdapterError","message","type","AdapterError","status","createApiError","errorStatus","ApiError","pokemonFormSpritesStructPayload","pipe","D","front_default","back_default","pokemonStructPayload","id","base_experience","order","weight","pokemonStruct","baseExperience","pokemonFormSpritesPayload","backDefault","getPokemonsStructPayload","count","next","previous","results","url","decodePokemonPayload","decode","decodeGetPokemonsPayload","getListPokemonFromApi","a","getPokemonList","pokemonList","fromNullable","map","data","fromOption","error","mapE","flow","getOrElseEW","matchEW","identity","getPokemonFromApi","pokemonName","getPokemon","pokemonApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","process","endpoints","builder","getPokemons","query","queryFn","arg","_","__","pokemonListRes","match","when","listRes","Array","isArray","array","Promise","all","pokemons","find","otherwise","useGetPokemonsQuery","rootReducer","pokemonsApi","reducer","sideEffectToast","createStandaloneToast","rtkQueryErrorLogger","api","isRejectedWithValue","title","duration","isClosable","store","configureStore","middleware","getDefaultMiddleware","concat","useAppSelector","useSelector","CardSmartComponent","addCard","index","CounterComponent","spacing","fontSize","CounterSmartComponent","BoardComponent","openedCards","container","templateColumns","gap","templateRows","grid","card","duplicateElements","shuffleElements","slice","sort","Math","random","areThreeOpenedCard","length","areTwoOpenedCard","isOneOpenedCard","useBoardSmart","numberOfCards","toString","isLoading","sideEffectHistory","useHistory","useState","sideEffectSetCardsOpened","useMemo","getOrElse","sideEffectDispatch","useDispatch","useEffect","cards","allPokemons","firstPokemon","secondPokemon","actions","every","some","push","win","handlers","BoardSmartComponent","WinComponent","as","size","WizardComponent","flexDirection","justifyContent","direction","align","WizardSmartComponent","startGame","useWizardSmart","AppRouter","path","start","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55bbafbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"wizard_container__671JJ\"};","export enum ErrorType {\n  AdapterError = \"AdapterError\",\n  ApiError = \"ApiError\",\n}\n\nexport type ApplicationError = {\n  readonly type: ErrorType;\n  readonly isError: true;\n  readonly status: number;\n};\n\nexport type AdapterError = ApplicationError & {\n  readonly type: ErrorType.AdapterError;\n  readonly message: string;\n  readonly status: 200;\n};\n\nexport type ApiError = ApplicationError & {\n  readonly type: ErrorType.ApiError;\n  readonly message: string;\n  readonly status: number;\n};\n","import { Null, Nullable } from \"./nullable.types\";\n\nexport const isNil = <T>(value: Nullable<T>): value is Null =>\n  value === null || value === undefined;\n\nexport const isNotNil = <T>(value: Nullable<T>): value is T =>\n  value !== null || value !== undefined;\n","import { Box, Image } from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport { Pokemon } from \"../../pokemon/pokemon.types\";\nimport styles from \"./card.module.css\";\n\nexport type CardComponentProps = {\n  readonly pokemon: Pokemon;\n  readonly foundPokemonNames: readonly string[];\n  readonly isOpened: boolean;\n  readonly onClick: (name: string) => void;\n};\n\nexport const CardComponent: FC<CardComponentProps> = ({\n  pokemon,\n  isOpened,\n  foundPokemonNames,\n  onClick,\n}) => {\n  const isOpen = foundPokemonNames.includes(pokemon.name) || isOpened;\n  return (\n    <div\n      className={`${styles.content} ${isOpen ? styles.noPointerEvents : \"\"}`}\n      onClick={() => onClick(pokemon.name)}\n    >\n      <div className={`${styles.back} ${isOpen ? styles.backAnimation : \"\"}`}>\n        <Box\n          width={\"200px\"}\n          height={\"200px\"}\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          overflow=\"hidden\"\n          className={styles.boxContainer}\n        >\n          <Image src={pokemon.sprites.frontDefault} />\n        </Box>\n      </div>\n\n      <div className={`${styles.front} ${isOpen ? styles.frontAnimation : \"\"}`}>\n        <Box\n          width={\"200px\"}\n          height={\"200px\"}\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          overflow=\"hidden\"\n        ></Box>\n      </div>\n    </div>\n  );\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../redux/store\";\nimport { Nullable } from \"../types\";\nimport { Player } from \"./player.types\";\n\nconst initialState: Player = {\n  moves: 0,\n  selectedPokemon: null,\n  foundPokemonNames: [],\n};\n\nexport const playerSlice = createSlice({\n  name: \"player\",\n  initialState,\n  reducers: {\n    addMove(state) {\n      return {\n        ...state,\n        moves: state.moves + 1,\n      };\n    },\n    setSelectedPokemon(state, action: PayloadAction<Nullable<string>>) {\n      return {\n        ...state,\n        selectedPokemon: action.payload,\n      };\n    },\n    addPokemonName(state, foundPokemonName: PayloadAction<string>) {\n      return {\n        ...state,\n        foundPokemonNames: [\n          ...state.foundPokemonNames,\n          foundPokemonName.payload,\n        ],\n      };\n    },\n  },\n});\n\nexport const selectPlayer = (state: RootState) => state.player;\n","import {\n  AdapterError,\n  ApiError,\n  ApplicationError,\n  ErrorType,\n} from \"./error.types\";\n\nexport const isError = (value: unknown): value is ApplicationError =>\n  typeof value === \"object\" && value !== null && \"isError\" in value;\n\nexport const isAdapterError = (\n  error: ApplicationError\n): error is AdapterError =>\n  error.isError && error.type === ErrorType.AdapterError;\n\nexport const isApiError = (error: ApplicationError): error is ApiError =>\n  error.isError && error.type === ErrorType.ApiError;\n","import { Route, Switch } from \"react-router-dom\";\nimport { BoardSmartComponent } from \"./game\";\nimport { WinComponent } from \"./game/win/win.component\";\nimport { WizardSmartComponent } from \"./game/wizard-smart/wizard-smart.component\";\n\nexport enum RouterPath {\n  start = \"/start\",\n  win = \"/win\",\n}\n\nexport const AppRouter = () => {\n  return (\n    <Switch>\n      <Route path={RouterPath.start} exact component={BoardSmartComponent} />\n      <Route path={RouterPath.win} exact component={WinComponent} />\n      <Route component={WizardSmartComponent} />\n    </Switch>\n  );\n};\n","import { AdapterError, ErrorType } from \"./error.types\";\n\nexport const createAdapterError = (message: string): AdapterError => ({\n  type: ErrorType.AdapterError,\n  message,\n  isError: true,\n  status: 200,\n});\n","import { ApiError, ErrorType } from \"./error.types\";\n\nexport const createApiError = (\n  message: string,\n  errorStatus: number\n): ApiError => ({\n  status: errorStatus,\n  type: ErrorType.ApiError,\n  message,\n  isError: true,\n});\n","import { pipe } from \"fp-ts/lib/function\";\nimport * as D from \"io-ts/Decoder\";\nimport {\n  GetPokemonsPayload,\n  Pokemon,\n  PokemonFormSprites,\n  PokemonFormSpritesPayload,\n  PokemonPayload,\n} from \"./pokemon.types\";\n\nconst adaptPokemonFormSpritesPayload = (\n  pokemonFormSpritesPayload: PokemonFormSpritesPayload\n): PokemonFormSprites => ({\n  frontDefault: pokemonFormSpritesPayload.front_default,\n  backDefault: pokemonFormSpritesPayload.back_default,\n});\n\nconst adaptPokemonPayload = (pokemon: PokemonPayload): Pokemon => ({\n  id: pokemon.id,\n  name: pokemon.name,\n  baseExperience: pokemon.base_experience,\n  height: pokemon.height,\n  order: pokemon.order,\n  weight: pokemon.weight,\n  sprites: adaptPokemonFormSpritesPayload(pokemon.sprites),\n});\n\nconst pokemonFormSpritesStructPayload = pipe(\n  D.struct<PokemonFormSpritesPayload>({\n    front_default: D.string,\n    back_default: D.string,\n  })\n);\n\nconst pokemonStructPayload = D.struct<PokemonPayload>({\n  id: D.number,\n  name: D.string,\n  base_experience: D.number,\n  height: D.number,\n  order: D.number,\n  weight: D.number,\n  sprites: pokemonFormSpritesStructPayload,\n});\n\nconst pokemonStruct = pipe(\n  pokemonStructPayload,\n  D.map<PokemonPayload, Pokemon>(adaptPokemonPayload)\n);\n\nconst getPokemonsStructPayload = D.struct<GetPokemonsPayload>({\n  count: D.number,\n  next: D.string,\n  previous: D.nullable(D.string),\n  results: D.array(\n    D.struct({\n      name: D.string,\n      url: D.string,\n    })\n  ),\n});\n\nexport const decodePokemonPayload = pokemonStruct.decode;\nexport const decodeGetPokemonsPayload = getPokemonsStructPayload.decode;\n\nexport type DecodePokemon = ReturnType<typeof decodePokemonPayload>;\nexport type DecodeGetPokemons = ReturnType<typeof decodeGetPokemonsPayload>;\n","import { QueryReturnValue } from \"@reduxjs/toolkit/dist/query/baseQueryTypes\";\nimport {\n  createApi,\n  fetchBaseQuery,\n  FetchBaseQueryError,\n  FetchBaseQueryMeta,\n} from \"@reduxjs/toolkit/query/react\";\nimport {\n  fromOption,\n  getOrElseW as getOrElseEW,\n  map as mapE,\n  matchW as matchEW,\n} from \"fp-ts/lib/Either\";\nimport { flow, identity, pipe } from \"fp-ts/lib/function\";\nimport { fromNullable, map } from \"fp-ts/lib/Option\";\nimport { match } from \"ts-pattern\";\nimport { isError } from \"../error\";\nimport { createAdapterError } from \"../error/adapter-error.factory\";\nimport { createApiError } from \"../error/api-error.factory\";\nimport {\n  decodeGetPokemonsPayload,\n  decodePokemonPayload,\n} from \"./pokemon.adapter\";\nimport { Pokemon } from \"./pokemon.types\";\n\nexport const getListPokemonFromApi = async ({\n  getPokemonList,\n}: {\n  readonly getPokemonList: () => Promise<\n    QueryReturnValue<unknown, FetchBaseQueryError, FetchBaseQueryMeta>\n  >;\n}) => {\n  const pokemonList = await getPokemonList();\n\n  return pipe(\n    pokemonList,\n    fromNullable,\n    map(({ data }) => data),\n    fromOption(() => ({\n      ...createApiError(\n        \"Api Error\",\n        typeof pokemonList.error?.status === \"number\"\n          ? pokemonList.error?.status\n          : 500\n      ),\n    })),\n    mapE(\n      flow(\n        decodeGetPokemonsPayload,\n        mapE(({ results }) => results),\n        getOrElseEW(() => createAdapterError(\"Adapter Pokemon List Error\"))\n      )\n    ),\n\n    matchEW(identity, identity)\n  );\n};\n\nexport const getPokemonFromApi = async (\n  pokemonName: string,\n  getPokemon: (\n    name: string\n  ) => Promise<\n    QueryReturnValue<unknown, FetchBaseQueryError, FetchBaseQueryMeta>\n  >\n) => {\n  const pokemon = await getPokemon(pokemonName);\n\n  return pipe(\n    pokemon,\n    fromNullable,\n    map(({ data }) => data),\n    fromOption(() => ({\n      ...createApiError(\n        \"Api Error\",\n        typeof pokemon.error?.status === \"number\" ? pokemon.error?.status : 500\n      ),\n    })),\n    mapE(\n      flow(\n        decodePokemonPayload,\n        getOrElseEW(() => ({\n          error: createAdapterError(\"Adapter Pokemon Error\"),\n        }))\n      )\n    ),\n    matchEW(identity, identity)\n  );\n};\n\nexport const pokemonApi = createApi({\n  reducerPath: \"pokemonsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_POKEMON_API }),\n  endpoints: (builder) => ({\n    getPokemons: builder.query<readonly Pokemon[], string>({\n      queryFn: async (arg, _, __, baseQuery) => {\n        const pokemonListRes = await getListPokemonFromApi({\n          getPokemonList: async () => await baseQuery(`pokemon?${arg}`),\n        });\n\n        return await match(pokemonListRes)\n          .when(isError, (error) => ({\n            error: {\n              status: error.status,\n              data: error,\n            },\n          }))\n          .when(\n            (listRes) => Array.isArray(listRes),\n            async (\n              array: ReadonlyArray<{\n                readonly name: string;\n                readonly url: string;\n              }>\n            ) => {\n              const pokemons = await Promise.all(\n                array.map(async ({ name }) => {\n                  return await getPokemonFromApi(\n                    name,\n                    async () => await baseQuery(`pokemon/${name}`)\n                  );\n                })\n              );\n\n              // this should be improved\n              const error = pokemons.find(isError);\n\n              return isError(error)\n                ? {\n                    error: {\n                      status: error.status,\n                      data: error,\n                    },\n                  }\n                : {\n                    data: pokemons as readonly Pokemon[],\n                  };\n            }\n          )\n          .otherwise(() => {\n            const adapterError = createAdapterError(\"Error with adapter\");\n\n            return {\n              error: {\n                status: 200,\n                data: adapterError,\n              },\n            };\n          });\n      },\n    }),\n  }),\n});\n\nexport const { useGetPokemonsQuery } = pokemonApi;\n","import { playerSlice } from \"../player/player.reducer\";\nimport { pokemonApi } from \"../pokemon/pokemon.reducer\";\n\nexport const rootReducer = {\n  pokemonsApi: pokemonApi.reducer,\n  player: playerSlice.reducer,\n};\n","/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport {\n  configureStore,\n  isRejectedWithValue,\n  Middleware,\n  MiddlewareAPI,\n} from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { rootReducer } from \"./redux.reducer\";\n\nconst sideEffectToast = createStandaloneToast();\n\nconst rtkQueryErrorLogger: Middleware =\n  (api: MiddlewareAPI) => (next) => (action) => {\n    // eslint-disable-next-line functional/no-conditional-statement\n    if (isRejectedWithValue(action)) {\n      sideEffectToast({\n        title: \"Ops, there is an error\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n    }\n\n    return next(action);\n  };\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(rtkQueryErrorLogger),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n// eslint-disable-next-line functional/prefer-tacit\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FC } from \"react\";\nimport { Pokemon } from \"../../pokemon/pokemon.types\";\nimport { OpenedCard } from \"../board-smart/book-smart.types\";\nimport { CardComponent } from \"../card/card.component\";\nimport { useCardSmart } from \"./card-smart-hook\";\n\nexport type CardSmartComponentProps = {\n  readonly pokemon: Pokemon;\n  readonly isOpened: boolean;\n  readonly index: number;\n  readonly addCard: (cards: OpenedCard) => void;\n};\n\nexport const CardSmartComponent: FC<CardSmartComponentProps> = ({\n  pokemon,\n  addCard,\n  isOpened,\n  index,\n}) => {\n  const { foundPokemonNames } = useCardSmart();\n\n  return (\n    <CardComponent\n      pokemon={pokemon}\n      onClick={() => addCard({ name: pokemon.name, index })}\n      isOpened={isOpened}\n      foundPokemonNames={foundPokemonNames}\n    />\n  );\n};\n","import { selectPlayer } from \"../../player/player.reducer\";\nimport { useAppSelector } from \"../../redux/store\";\n\nexport const useCardSmart = () => {\n  const { foundPokemonNames } = useAppSelector(selectPlayer);\n\n  return {\n    foundPokemonNames,\n  };\n};\n","import { FC } from \"react\";\nimport { Stack, Text } from \"@chakra-ui/react\";\n\ntype CounterComponentProps = {\n  readonly moves: number;\n};\n\nexport const CounterComponent: FC<CounterComponentProps> = ({ moves }) => {\n  return (\n    <Stack spacing={3}>\n      <Text fontSize=\"3xl\">Moves</Text>\n      <Text fontSize=\"2xl\">{moves}</Text>;\n    </Stack>\n  );\n};\n","import { CounterComponent } from \"../counter/counter.component\";\nimport { useCounterSmart } from \"./counter-smart.hook\";\n\nexport const CounterSmartComponent = () => {\n  const { moves } = useCounterSmart();\n\n  return <CounterComponent moves={moves} />;\n};\n","import { selectPlayer } from \"../../player/player.reducer\";\nimport { useAppSelector } from \"../../redux/store\";\n\nexport const useCounterSmart = () => {\n  const { moves } = useAppSelector(selectPlayer);\n\n  return { moves };\n};\n","import { Grid } from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport { Pokemon } from \"../../pokemon/pokemon.types\";\nimport { isNotNil } from \"../../types/nullable.guards\";\nimport { OpenedCard } from \"../board-smart/book-smart.types\";\nimport { CardSmartComponent } from \"../card-smart/card-smart.component\";\nimport { CounterSmartComponent } from \"../counter-smart/counter-smart.component\";\nimport styles from \"./board.module.css\";\n\nexport type BoardComponentProps = {\n  readonly pokemons: readonly Pokemon[];\n  readonly openedCards: readonly OpenedCard[];\n  readonly addCard: (card: OpenedCard) => void;\n};\n\nexport const BoardComponent: FC<BoardComponentProps> = ({\n  pokemons,\n  openedCards,\n  addCard,\n}) => {\n  return (\n    <div className={styles.container}>\n      <Grid\n        templateColumns={`repeat(3,1fr)`}\n        gap={\"10px\"}\n        templateRows={`repeat(3,1fr)`}\n        height={\"100%\"}\n        className={styles.grid}\n      >\n        {pokemons.map((pokemon, index) => (\n          <CardSmartComponent\n            key={index}\n            addCard={addCard}\n            index={index}\n            isOpened={isNotNil(\n              openedCards.find((card) => card.index === index)\n            )}\n            pokemon={pokemon}\n          />\n        ))}\n      </Grid>\n\n      <CounterSmartComponent />\n    </div>\n  );\n};\n","export const duplicateElements = <T>(array: readonly T[]) => [\n  ...array,\n  ...array,\n];\n","// Not the best algorithm, but enough for the project\n\nexport const shuffleElements = <T>(array: readonly T[]) =>\n  array.slice().sort(() => Math.random() - 0.5);\n","import { Pokemon } from \"../../pokemon/pokemon.types\";\nimport { OpenedCard } from \"./book-smart.types\";\n\nexport const areThreeOpenedCard = (openedCards: readonly OpenedCard[]) =>\n  openedCards.length === 3;\n\nexport const areTwoOpenedCard = (openedCards: readonly OpenedCard[]) =>\n  openedCards.length === 2;\n\nexport const isOneOpenedCard = (openedCards: readonly OpenedCard[]) =>\n  openedCards.length === 1;\n\nexport const isEndGame = (\n  foundPokemonName: readonly string[],\n  allPokemons: readonly Pokemon[]\n) =>\n  foundPokemonName.length > 0 &&\n  allPokemons.every((value) =>\n    foundPokemonName.some((name) => name === value.name)\n  );\n","/* eslint-disable functional/no-conditional-statement */\nimport { flow, pipe } from \"fp-ts/lib/function\";\nimport { fromNullable, getOrElse, map } from \"fp-ts/lib/Option\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { match } from \"ts-pattern\";\nimport { duplicateElements } from \"../../array/duplicate-elements\";\nimport { shuffleElements } from \"../../array/shuffle-elements\";\nimport { playerSlice, selectPlayer } from \"../../player/player.reducer\";\nimport { useGetPokemonsQuery } from \"../../pokemon/pokemon.reducer\";\nimport { Pokemon } from \"../../pokemon/pokemon.types\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/store\";\nimport { RouterPath } from \"../../Router\";\nimport { isNotNil } from \"../../types/nullable.guards\";\nimport { OpenedCard } from \"./book-smart.types\";\nimport {\n  areThreeOpenedCard,\n  areTwoOpenedCard,\n  isEndGame,\n  isOneOpenedCard,\n} from \"./book-smart.utils\";\n\nexport const useBoardSmart = (numberOfCards: number) => {\n  const { data, isLoading } = useGetPokemonsQuery(numberOfCards.toString());\n\n  const sideEffectHistory = useHistory();\n\n  const { foundPokemonNames } = useAppSelector(selectPlayer);\n\n  const [openedCards, sideEffectSetCardsOpened] = useState<\n    readonly OpenedCard[]\n  >([]);\n\n  const pokemons = useMemo(\n    () =>\n      pipe(\n        data,\n        fromNullable,\n        map(\n          flow(\n            shuffleElements,\n            (pokemons) => pokemons.slice(0, numberOfCards),\n            duplicateElements\n          )\n        ),\n        getOrElse(() => [] as readonly Pokemon[])\n      ),\n    [data, numberOfCards]\n  );\n\n  const sideEffectDispatch = useAppDispatch();\n\n  // eslint-disable-next-line functional/no-expression-statement\n  useEffect(\n    () =>\n      match(openedCards)\n        .when(areThreeOpenedCard, (cards) => {\n          sideEffectSetCardsOpened([cards[2]]);\n        })\n        .when(areTwoOpenedCard, (cards) => {\n          const firstPokemon = cards[0];\n          const secondPokemon = cards[1];\n\n          if (\n            isNotNil(firstPokemon) &&\n            isNotNil(secondPokemon) &&\n            firstPokemon.name === secondPokemon.name\n          ) {\n            sideEffectSetCardsOpened([]);\n            sideEffectDispatch(\n              playerSlice.actions.addPokemonName(firstPokemon.name)\n            );\n            sideEffectDispatch(playerSlice.actions.addMove());\n            sideEffectDispatch(playerSlice.actions.setSelectedPokemon(null));\n\n            if (\n              isEndGame([...foundPokemonNames, firstPokemon.name], pokemons)\n            ) {\n              sideEffectHistory.push(RouterPath.win);\n            }\n          } else {\n            sideEffectDispatch(playerSlice.actions.addMove());\n            sideEffectDispatch(playerSlice.actions.setSelectedPokemon(null));\n          }\n        })\n        .when(isOneOpenedCard, (card) => {\n          const firstPokemon = card[0];\n          sideEffectDispatch(\n            playerSlice.actions.setSelectedPokemon(firstPokemon.name)\n          );\n        })\n        .otherwise(() => {\n          sideEffectDispatch(playerSlice.actions.setSelectedPokemon(null));\n        }),\n    [\n      openedCards,\n      sideEffectHistory,\n      pokemons,\n      foundPokemonNames,\n      sideEffectDispatch,\n    ]\n  );\n\n  const handlers = useMemo(\n    () => ({\n      addCard: (card: OpenedCard) =>\n        sideEffectSetCardsOpened([...openedCards, card]),\n    }),\n    [openedCards]\n  );\n\n  return {\n    pokemons,\n    isLoading,\n    openedCards,\n    addCard: handlers.addCard,\n  };\n};\n","import { BoardComponent } from \"../board/board.component\";\nimport { useBoardSmart } from \"./board-smart.hook\";\n\nexport const BoardSmartComponent = () => {\n  const cardsNumber = 4;\n\n  const { pokemons, openedCards, addCard } = useBoardSmart(cardsNumber);\n\n  return (\n    <BoardComponent\n      openedCards={openedCards}\n      addCard={addCard}\n      pokemons={pokemons}\n    />\n  );\n};\n","import { Center, Heading } from \"@chakra-ui/react\";\n\nexport const WinComponent = () => {\n  return (\n    <>\n      <Center>\n        <Heading as=\"h3\" size=\"lg\">\n          You won! Congratulations!\n        </Heading>\n      </Center>\n    </>\n  );\n};\n","import { Button, Center, Flex, Heading, Stack, Text } from \"@chakra-ui/react\";\nimport { FC } from \"react\";\nimport styles from \"./wizard.module.css\";\n\ntype WizardComponentProps = {\n  readonly onClick: () => void;\n};\n\nexport const WizardComponent: FC<WizardComponentProps> = ({ onClick }) => {\n  return (\n    <>\n      <Center>\n        <Heading as=\"h3\" size=\"lg\">\n          Pokemon Memory Game\n        </Heading>\n      </Center>\n      <div className={styles.container}>\n        <Flex\n          flexDirection=\"column\"\n          height={\"150px\"}\n          justifyContent={\"space-between\"}\n        >\n          <Stack spacing={4} direction=\"column\" align=\"center\">\n            <Text fontSize=\"4xl\">Start the game</Text>\n            <Button onClick={onClick}>Start</Button>\n          </Stack>\n        </Flex>\n      </div>\n    </>\n  );\n};\n","import { WizardComponent } from \"../wizard/wizard.component\";\nimport { useWizardSmart } from \"./wizard-smart.hooks\";\n\nexport const WizardSmartComponent = () => {\n  const { startGame } = useWizardSmart();\n\n  return <WizardComponent onClick={startGame} />;\n};\n","import { useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const useWizardSmart = () => {\n  const sideEffectHistory = useHistory();\n\n  const handlers = useMemo(\n    () => ({\n      startGame: () => sideEffectHistory.push(\"/start\"),\n    }),\n    [sideEffectHistory]\n  );\n\n  return {\n    startGame: handlers.startGame,\n  };\n};\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { AppRouter } from \"./Router\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <AppRouter />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable functional/no-expression-statement */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"front\":\"card_front__1LzoT\",\"back\":\"card_back__2aXUV\",\"frontAnimation\":\"card_frontAnimation__3fXXz\",\"flip-card\":\"card_flip-card__2Tox2\",\"backAnimation\":\"card_backAnimation__1vo7x\",\"content\":\"card_content__1Vx2p\",\"boxContainer\":\"card_boxContainer__1aE1o\",\"noPointerEvents\":\"card_noPointerEvents__EoGuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"board_grid__30Vvg\",\"container\":\"board_container__1Pz2m\"};"],"sourceRoot":""}